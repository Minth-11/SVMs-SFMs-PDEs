#LyX 2.3 created this file. For more info see http://www.lyx.org/
\lyxformat 544
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass article
\use_default_options true
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman "default" "default"
\font_sans "default" "default"
\font_typewriter "default" "default"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\use_microtype false
\use_dash_ligatures true
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize a4paper
\use_geometry true
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 1
\use_minted 0
\index Index
\shortcut idx
\color #008000
\end_index
\leftmargin 2cm
\topmargin 2cm
\rightmargin 2cm
\bottommargin 2cm
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\is_math_indent 0
\math_numbering_side default
\quotes_style english
\dynamic_quotes 0
\papercolumns 2
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Title
Proposal: solving PDEs using SVMs by symbolically integrating
\end_layout

\begin_layout Author
Zander Op de Beeck
\end_layout

\begin_layout Section
Problem statement
\end_layout

\begin_layout Standard
A PDE a (vector-)function written as
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{alignat*}{3}
\mathcal{L}u & = & f & \quad\text{on}\quad & \Sigma\\
\mathcal{B}u & = & g & \quad\text{on}\quad & \partial\Sigma
\end{alignat*}

\end_inset


\end_layout

\begin_layout Standard
where
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
\begin_inset Formula $u$
\end_inset

 is the function to be found,
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
\begin_inset Formula $\mathcal{L}$
\end_inset

 is the (differential) operator specifying the PDE,
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
\begin_inset Formula $f$
\end_inset

 further specifies the PDE,
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
\begin_inset Formula $\Sigma$
\end_inset

 is the domain on which the problem is to be solved
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
\begin_inset Formula $\mathcal{B}$
\end_inset

 is the (differential) operator specifying the boundary conditions
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
\begin_inset Formula $g$
\end_inset

 further specifies the boundary conditions, and
\end_layout

\begin_layout Labeling
\labelwidthstring 00.00.0000
\begin_inset Formula $\partial\Sigma$
\end_inset

 is the boundary of the domain.
\end_layout

\begin_layout Section
Previous methods
\end_layout

\begin_layout Standard
Outside of the usual methods, including FEM, FDM, spectral methods and BIEs,
 as well as approaches based on neural networks, 
\begin_inset CommandInset citation
LatexCommand cite
key "LStPDEuLSSVM"
literal "false"

\end_inset

 introduced a way of solving PDEs using LS-SVMs.
 In this method,
\end_layout

\begin_layout Enumerate
Two sets of collocation points are chosen; one in the domain (
\begin_inset Formula $\mathcal{Z}_{\mathcal{D}}$
\end_inset

) and one on the boundary (
\begin_inset Formula $\mathcal{Z}_{\mathcal{B}}$
\end_inset

).
\end_layout

\begin_layout Enumerate
A loss function is set up by summing the error 
\begin_inset Formula $\frac{1}{2}\left(\mathcal{L}u-f\right)^{2}$
\end_inset

 at all points in 
\begin_inset Formula $\mathcal{Z}_{\mathcal{D}}$
\end_inset

.
\end_layout

\begin_layout Enumerate
The boundary conditions are incorporated as hard constraints; 
\begin_inset Formula $\mathcal{B}u=g$
\end_inset

 is to be satisfied for all points in 
\begin_inset Formula $\mathcal{Z}_{\mathcal{B}}$
\end_inset

.
\end_layout

\begin_layout Enumerate
\begin_inset Formula $u$
\end_inset

 is assumed to be assumed to be of the form 
\begin_inset Formula $u(z)=w^{T}\varphi(z)+d$
\end_inset

, as in LS-SVM, and the problem can be solved either in the primal or the
 dual.
\end_layout

\begin_layout Standard
The final objective then becomes
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{alignat*}{1}
\underset{u}{\text{minimize}}\quad & \frac{1}{2}\sum_{i=1}^{|\mathcal{Z}_{\mathcal{D}}|}\left[\left(\mathcal{L}[u]-f\right)\left(z_{\mathcal{D}}^{i}\right)\right]^{2}\\
\text{subject to\quad} & \forall j\in1\ldots|\mathcal{Z}_{\mathcal{B}}|:\ \mathcal{B}[u\left(z_{\mathcal{B}}^{i}\right)]=g\left(z_{\mathcal{B}}^{i}\right)\text{.}
\end{alignat*}

\end_inset


\end_layout

\begin_layout Section
Proposed method
\end_layout

\begin_layout Subsection
Problems to overcome
\end_layout

\begin_layout Standard
One of the niceties PDEs has over data-based tasks is that, in principle,
 the loss function can be calculated anywhere on the domain.
 
\begin_inset CommandInset citation
LatexCommand cite
key "LStPDEuLSSVM"
literal "false"

\end_inset

 chooses to first pick its collocation points and then leave them where
 they are, providing a rather efficient method and very tracktable.
 This, however, also comes with a few disadvantages:
\end_layout

\begin_layout Enumerate
The location (and number) of points may not be optimal.
\end_layout

\begin_layout Enumerate
for high-dimensional problems, the number of points needed to adequately
 sample the domain grows exponentially (curse of dimensionality).
\end_layout

\begin_layout Enumerate
Points spaced too far apart may not pick up on fine detail, and may not
 even account for it in the loss.
\end_layout

\begin_layout Subsection
Proposed method
\end_layout

\begin_layout Subsubsection
Loss and model
\end_layout

\begin_layout Standard
On way of alleviating these problems somewhat may be to learn the location
 of the collocation points themselves in addition to what 
\begin_inset CommandInset citation
LatexCommand cite
key "LStPDEuLSSVM"
literal "false"

\end_inset

 does.
 This would, however, come with a serious problem: the loss function 
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
\underset{u,\mathcal{Z}_{\mathcal{D}}}{\text{minimize}}\quad\frac{1}{2}\sum_{i=1}^{|\mathcal{Z}_{\mathcal{D}}|}\left[\left(\mathcal{L}[u]-f\right)\left(z_{\mathcal{D}}^{i}\right)\right]^{2}
\]

\end_inset


\end_layout

\begin_layout Standard
calculates the error only at the collocation points themselves thus incentivizin
g the model to choose collocation points at places where the error is low
 anyways, which would result in a rather poor solution.
\end_layout

\begin_layout Standard
A loss independent of the location of the point is thus required
\begin_inset Foot
status open

\begin_layout Plain Layout
Thus relieving the collocation points from their role in calculation the
 erros, making them sample points.
\end_layout

\end_inset

, which an explicit integration over the domain would accomplish:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
\underset{u,\mathcal{Z}_{\mathcal{D}}}{\text{minimize}}\quad\frac{1}{2}\int_{\mathcal{D}}\left[\left(\mathcal{L}[u]-f\right)\left(z\right)\right]^{2}dz\text{.}
\]

\end_inset


\end_layout

\begin_layout Standard
This integral may not be intractable, for example, if the polynomial kernel
 
\begin_inset Formula $K(x,y)=\left(x^{T}y+c\right)^{d}$
\end_inset

 is chosen, the resulting model is a polynomial as well, which can easily
 be integrated symbolically, as can its derivatives and products with other
 polynomials, and so on.
 Assuming 
\begin_inset Formula $\Sigma$
\end_inset

 is finite, any nonpolynomial function can be approximated on the domain
 as a polynomial, and if a bound on the range of 
\begin_inset Formula $u$
\end_inset

 is known, any nonpolynomial function that would take 
\begin_inset Formula $u$
\end_inset

 as an argument could be polynomially approximated over this range as well.
\end_layout

\begin_layout Standard
(I have also done some small-scale experiments with RBF kernels in a computer
 algebra system, which worked as intended as well.)
\end_layout

\begin_layout Standard
For other kernels, other approximations of functions in the domain could
 be made.
 Moreover, picking a 
\begin_inset Quotes eld
\end_inset

working domain
\begin_inset Quotes erd
\end_inset

 that contains 
\begin_inset Formula $\Sigma$
\end_inset

 but has a more convenient shape would be possible.
\end_layout

\begin_layout Subsubsection
Boundary conditions
\end_layout

\begin_layout Standard
\begin_inset CommandInset citation
LatexCommand cite
key "LStPDEuLSSVM"
literal "false"

\end_inset

 chose to incorporate the boundary conditions as hard constraints.
 It would be impossible to symbolically integrate over (an approximation
 of) the boundary and still treat it as a constraint in this way; for one,
 the model has a finite number of parameters, which, in general, would not
 suffice perfectly fitting 
\begin_inset Formula $u$
\end_inset

 on the entire boundary.
 The boundary, however, can be associated with a loss
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
\left(\mathcal{B}[u\left(z\right)]-g\left(z\right)\right)^{2}\text{,}
\]

\end_inset


\end_layout

\begin_layout Standard
leaving four options:
\end_layout

\begin_layout Enumerate
Pick a set of boundary points 
\begin_inset Formula $\mathcal{Z}_{\mathcal{B}}$
\end_inset

 beforehand and impose 
\begin_inset Formula $\forall j\in1\ldots|\mathcal{Z}_{\mathcal{B}}|:\ \mathcal{B}[u\left(z_{\mathcal{B}}^{i}\right)]=g\left(z_{\mathcal{B}}^{i}\right)$
\end_inset

 as a hard constraint, as was done in 
\begin_inset CommandInset citation
LatexCommand cite
key "LStPDEuLSSVM"
literal "false"

\end_inset

.
\end_layout

\begin_layout Enumerate
Pick a set of boundary points 
\begin_inset Formula $\mathcal{Z}_{\mathcal{B}}$
\end_inset

 beforehand and add their loss to the objective function.
\end_layout

\begin_layout Enumerate
Symbolically integrate over (an approximation of) the boundary conditions
 and add to the loss (perhaps using a weighting).
\end_layout

\begin_layout Enumerate
A mixture of these.
\end_layout

\begin_layout Standard
The third option would result in an optimization problem 
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{alignat*}{1}
\underset{u,\mathcal{Z}}{\text{minimize}}\quad & \frac{1}{2}\int_{\mathcal{D}}\left[\left(\mathcal{L}[u]-f\right)\left(z\right)\right]^{2}dz\\
 & +\ \gamma_{b}\int_{\partial\Sigma}\left[\left(\mathcal{B}[u]-g\right)\left(z\right)\right]^{2}dz\text{.}
\end{alignat*}

\end_inset


\end_layout

\begin_layout Standard
Where 
\begin_inset Formula $\gamma_{b}$
\end_inset

 is a hyperparameter specifying the importance of fitting the boundary condition
s.
 The same remarks about the integration often being symbolically tractable
 as in the section on the PDE itself apply here.
\end_layout

\begin_layout Standard
Picking points for boundary conditions scales a bit better than picking
 points in 
\begin_inset Formula $\Sigma$
\end_inset

, after all, 
\begin_inset Formula $\partial\Sigma$
\end_inset

 is of lower dimensionality.
\end_layout

\begin_layout Subsubsection
Supposed advantages and limitations
\end_layout

\begin_layout Standard
While symbolic integration over the domain does away with the curse of high-dime
nsionality for calculating a loss, it does not in any give the model more
 flexibility to fit a high-dimensional function.
 This would have to be done by picking enough sample points and having a
 flexible-enough model in the first place.
 Having the pointsplace themselves as they wish might help in that.
\end_layout

\begin_layout Standard
The glaring limitation of this approach is that the integrals need be symbolical
ly doable, thouhg this can be alleviated somewhat by picking easily integrable
 approximations to the original problem.
\end_layout

\begin_layout Subsection
Extentions and considerations
\end_layout

\begin_layout Standard

\end_layout

\begin_layout Itemize
Optimization could be done ether all at once or alternately updating sample
 points and SVM model
\end_layout

\begin_layout Itemize
Fluid model, mesh B.C.
\end_layout

\begin_layout Itemize
Finite differences vs symbolic differentiation
\end_layout

\begin_layout Standard
\begin_inset CommandInset bibtex
LatexCommand bibtex
btprint "btPrintCited"
bibfiles "proposal"
options "plain"

\end_inset


\end_layout

\end_body
\end_document
